namespace JetBrains.ReSharper.Plugins.FSharp.Services.Formatter

[<CodeCleanupModule>]
type FSharpReformatCode(textControlManager: ITextControlManager) =
  member x.Process(sourceFile, rangeMarker, _, _, _) =
    if isNotNull rangeMarker then
      try<caret>
        let range = ofDocumentRange rangeMarker.DocumentRange

        let formatted =
          fantomasHost.FormatSelection(filePath, range, text, settings, parsingOptions, newLineText)

        let offset = rangeMarker.DocumentRange.StartOffset.Offset
        let oldLength = rangeMarker.DocumentRange.Length

        let documentChange =
          DocumentChange(document, offset, oldLength, formatted, stamp, modificationSide)

        use _ = WriteLockCookie.Create()
        document.ChangeDocument(documentChange, TimeStamp.NextValue)
        sourceFile.GetPsiServices().Files.CommitAllDocuments()
      with _ ->
        ()
    else
      let textControl =
        textControlManager.VisibleTextControls
        |> Seq.find (fun c -> c.Document == document)

      cursorPosition = textControl.Caret.Position.Value.ToDocLineColumn()

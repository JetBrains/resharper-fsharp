Language: PsiLanguageType:F#
IFSharpImplFile
  INamedModuleDeclaration
    FSharpTokenType+ModuleTokenElement(type:MODULE, text:module)
    Whitespace(type:WHITE_SPACE, text: ) spaces:" "
    FSharpIdentifierToken(type:IDENTIFIER, text:Module)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        IAttributeList
          FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
          IAttribute
            ITypeReferenceName
              FSharpIdentifierToken(type:IDENTIFIER, text:AbstractClass)
          FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:A)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        IAbstractMemberDeclaration
          FSharpTokenType+AbstractTokenElement(type:ABSTRACT, text:abstract)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpIdentifierToken(type:IDENTIFIER, text:P)
          IReturnTypeInfo
            FSharpTokenType+ColonTokenElement(type:COLON, text::)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IParameterSignatureTypeUsage
              INamedTypeUsage
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:int)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IAccessorsNamesClause
            FSharpTokenType+WithTokenElement(type:WITH, text:with)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpIdentifierToken(type:IDENTIFIER, text:get)
            FSharpTokenType+CommaTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpIdentifierToken(type:IDENTIFIER, text:set)
  NewLine(type:NEW_LINE, text:\n) spaces:"\n"


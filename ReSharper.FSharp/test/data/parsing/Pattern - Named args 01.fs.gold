Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ILetBindingsDeclaration
      ITopBinding
        FSharpTokenType+LetTokenElement(type:LET, text:let)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IParenPat
          FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
          IParametersOwnerPat
            IExpressionReferenceName
              FSharpIdentifierToken(type:IDENTIFIER, text:UnionCase)
            INamedUnionCaseFieldsPat
              FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
              IFieldPat
                IExpressionReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:namedFieldArg)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                ITopReferencePat
                  IExpressionReferenceName
                    FSharpIdentifierToken(type:IDENTIFIER, text:namedFieldPat)
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
          FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IChameleonExpression
          IUnitExpr
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


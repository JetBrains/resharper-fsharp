Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ILetBindingsDeclaration
      ITopBinding
        FSharpTokenType+LetTokenElement(type:LET, text:let)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        ITopReferencePat
          IExpressionReferenceName
            FSharpIdentifierToken(type:IDENTIFIER, text:x)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        IChameleonExpression
          ILetOrUseExpr
            ILocalBinding
              XmlDocBlock
                DocComment(type:LINE_COMMENT, text:///A1)
                NewLine(type:NEW_LINE, text:\n) spaces:"\n"
                Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
                DocComment(type:LINE_COMMENT, text:///A2)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
              FSharpTokenType+LetTokenElement(type:LET, text:let)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              ILocalReferencePat
                IExpressionReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:x)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              ILetOrUseExpr
                ILocalBinding
                  XmlDocBlock
                    DocComment(type:LINE_COMMENT, text:///B)
                  NewLine(type:NEW_LINE, text:\n) spaces:"\n"
                  Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
                  FSharpTokenType+LetTokenElement(type:LET, text:let)
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  ILocalReferencePat
                    IExpressionReferenceName
                      FSharpIdentifierToken(type:IDENTIFIER, text:y)
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  ILiteralExpr
                    FSharpToken(type:INT32, text:3)
                NewLine(type:NEW_LINE, text:\n) spaces:"\n"
                Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
                IReferenceExpr
                  FSharpIdentifierToken(type:IDENTIFIER, text:y)
            NewLine(type:NEW_LINE, text:\n) spaces:"\n"
            Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
            ILiteralExpr
              FSharpToken(type:INT32, text:123)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:T)
        IPrimaryConstructorDeclaration
          IPatternParameterDeclarationGroup
            IPatternParameterDeclaration
              IUnitPat
                FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        ISecondaryConstructorDeclaration
          FSharpTokenType+NewTokenElement(type:NEW, text:new)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IPatternParameterDeclarationGroup
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            IPatternParameterDeclaration
              IWildPat
                FSharpTokenType+UnderscoreTokenElement(type:UNDERSCORE, text:_)
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IChameleonExpression
            IPrefixAppExpr
              IReferenceExpr
                FSharpIdentifierToken(type:IDENTIFIER, text:T)
              IUnitExpr
                FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


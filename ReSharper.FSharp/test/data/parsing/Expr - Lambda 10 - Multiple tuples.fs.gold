Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    IExpressionStatement
      IChameleonExpression
        ILambdaExpr
          FSharpTokenType+FunTokenElement(type:FUN, text:fun)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IParametersPatternDeclaration
            IParenPat
              FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
              ITuplePat
                ILocalReferencePat
                  IExpressionReferenceName
                    FSharpIdentifierToken(type:IDENTIFIER, text:a)
                FSharpTokenType+CommaTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                ILocalReferencePat
                  IExpressionReferenceName
                    FSharpIdentifierToken(type:IDENTIFIER, text:b)
              FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IParametersPatternDeclaration
            ILocalReferencePat
              IExpressionReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:c)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IParametersPatternDeclaration
            IParenPat
              FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
              ITuplePat
                ILocalReferencePat
                  IExpressionReferenceName
                    FSharpIdentifierToken(type:IDENTIFIER, text:d)
                FSharpTokenType+CommaTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                ILocalReferencePat
                  IExpressionReferenceName
                    FSharpIdentifierToken(type:IDENTIFIER, text:e)
              FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+RarrowTokenElement(type:RARROW, text:->)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IUnitExpr
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))


Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    IExpressionStatement
      IChameleonExpression
        ILambdaExpr
          FSharpTokenType+FunTokenElement(type:FUN, text:fun)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IPatternParameterDeclarationGroup
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            IPatternParameterDeclaration
              IAsPat
                ITuplePat
                  ILocalReferencePat
                    IExpressionReferenceName
                      FSharpIdentifierToken(type:IDENTIFIER, text:a)
                  FSharpTokenType+CommaTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  ILocalReferencePat
                    IExpressionReferenceName
                      FSharpIdentifierToken(type:IDENTIFIER, text:b)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                FSharpTokenType+AsTokenElement(type:AS, text:as)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                ILocalReferencePat
                  IExpressionReferenceName
                    FSharpIdentifierToken(type:IDENTIFIER, text:c)
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IPatternParameterDeclarationGroup
            IPatternParameterDeclaration
              ILocalReferencePat
                IExpressionReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:d)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IPatternParameterDeclarationGroup
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            IPatternParameterDeclaration
              IAsPat
                ITuplePat
                  ILocalReferencePat
                    IExpressionReferenceName
                      FSharpIdentifierToken(type:IDENTIFIER, text:e)
                  FSharpTokenType+CommaTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  ILocalReferencePat
                    IExpressionReferenceName
                      FSharpIdentifierToken(type:IDENTIFIER, text:f)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                FSharpTokenType+AsTokenElement(type:AS, text:as)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                ILocalReferencePat
                  IExpressionReferenceName
                    FSharpIdentifierToken(type:IDENTIFIER, text:g)
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IPatternParameterDeclarationGroup
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            IPatternParameterDeclaration
              ILocalReferencePat
                IExpressionReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:h)
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+RarrowTokenElement(type:RARROW, text:->)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IUnitExpr
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


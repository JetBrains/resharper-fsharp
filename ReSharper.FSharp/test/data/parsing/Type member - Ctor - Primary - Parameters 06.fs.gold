Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:T)
        IPrimaryConstructorDeclaration
          IPatternParameterDeclarationGroup
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            IPatternParameterDeclaration
              ILocalReferencePat
                IExpressionReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:a)
            FSharpTokenType+CommaTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IPatternParameterDeclaration
              ILocalReferencePat
                IExpressionReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:b)
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        IInterfaceImplementation
          FSharpTokenType+InterfaceTokenElement(type:INTERFACE, text:interface)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          ITypeReferenceName
            FSharpIdentifierToken(type:IDENTIFIER, text:I)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


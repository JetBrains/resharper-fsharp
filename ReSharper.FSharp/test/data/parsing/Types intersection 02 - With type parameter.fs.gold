Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ILetBindingsDeclaration
      ITopBinding
        FSharpTokenType+LetTokenElement(type:LET, text:let)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        ITopReferencePat
          IExpressionReferenceName
            FSharpIdentifierToken(type:IDENTIFIER, text:f)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IParametersPatternDeclaration
          IParenPat
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            ITypedPat
              ILocalReferencePat
                IExpressionReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:x)
              FSharpTokenType+ColonTokenElement(type:COLON, text::)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              IIntersectionTypeUsage
                ITypeReferenceName
                  ITypeParameterId
                    FSharpTokenType+QuoteTokenElement(type:QUOTE, text:')
                    FSharpIdentifierToken(type:IDENTIFIER, text:t)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                FSharpTokenType+AmpTokenElement(type:AMP, text:&)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                IHashTypeUsage
                  FSharpToken(type:HASH, text:#)
                  INamedTypeUsage
                    ITypeReferenceName
                      FSharpIdentifierToken(type:IDENTIFIER, text:A)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                FSharpTokenType+AmpTokenElement(type:AMP, text:&)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                IHashTypeUsage
                  FSharpToken(type:HASH, text:#)
                  INamedTypeUsage
                    ITypeReferenceName
                      FSharpIdentifierToken(type:IDENTIFIER, text:B)
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IChameleonExpression
          IUnitExpr
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


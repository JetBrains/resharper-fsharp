Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    INestedModuleDeclaration
      XmlDocBlock
        DocComment(type:LINE_COMMENT, text:///M1)
      NewLine(type:NEW_LINE, text:\n) spaces:"\n"
      IAttributeList
        FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
        IAttribute
          ITypeReferenceName
            FSharpIdentifierToken(type:IDENTIFIER, text:Attr)
        FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
      NewLine(type:NEW_LINE, text:\n) spaces:"\n"
      FSharpTokenType+ModuleTokenElement(type:MODULE, text:module)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      FSharpIdentifierToken(type:IDENTIFIER, text:M1)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
      NewLine(type:NEW_LINE, text:\n) spaces:"\n"
      Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
      ITypeDeclarationGroup
        IFSharpTypeDeclaration
          FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpIdentifierToken(type:IDENTIFIER, text:A)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    INestedModuleDeclaration
      XmlDocBlock
        DocComment(type:LINE_COMMENT, text:///M2)
      NewLine(type:NEW_LINE, text:\n) spaces:"\n"
      IAttributeList
        FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
        IAttribute
          ITypeReferenceName
            FSharpIdentifierToken(type:IDENTIFIER, text:Attr)
        FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
      NewLine(type:NEW_LINE, text:\n) spaces:"\n"
      FSharpTokenType+ModuleTokenElement(type:MODULE, text:module)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      FSharpIdentifierToken(type:IDENTIFIER, text:M2)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
      NewLine(type:NEW_LINE, text:\n) spaces:"\n"
      Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
      ITypeDeclarationGroup
        IFSharpTypeDeclaration
          FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpIdentifierToken(type:IDENTIFIER, text:B)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


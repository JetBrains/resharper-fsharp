Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ILetBindingsDeclaration
      ITopBinding
        FSharpTokenType+LetTokenElement(type:LET, text:let)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IParenPat
          FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
          ITypedPat
            ITopReferencePat
              IExpressionReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:x)
            FSharpTokenType+ColonTokenElement(type:COLON, text::)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IConstrainedTypeUsage
              INamedTypeUsage
                ITypeReferenceName
                  ITypeParameterId
                    FSharpTokenType+QuoteTokenElement(type:QUOTE, text:')
                    FSharpIdentifierToken(type:IDENTIFIER, text:T)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              ITypeConstraintsClause
                FSharpTokenType+WhenTokenElement(type:WHEN, text:when)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                ISubtypeConstraint
                  ITypeReferenceName
                    ITypeParameterId
                      FSharpTokenType+QuoteTokenElement(type:QUOTE, text:')
                      FSharpIdentifierToken(type:IDENTIFIER, text:T)
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  FSharpTokenType+ColonGreaterTokenElement(type:COLON_GREATER, text::>)
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  IIntersectionTypeUsage
                    IHashTypeUsage
                      FSharpToken(type:HASH, text:#)
                      INamedTypeUsage
                        ITypeReferenceName
                          FSharpIdentifierToken(type:IDENTIFIER, text:A)
                    Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                    FSharpTokenType+AmpTokenElement(type:AMP, text:&)
                    Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                    IHashTypeUsage
                      FSharpToken(type:HASH, text:#)
                      INamedTypeUsage
                        ITypeReferenceName
                          FSharpIdentifierToken(type:IDENTIFIER, text:B)
          FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IChameleonExpression
          ILiteralExpr
            FSharpToken(type:INT32, text:0)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


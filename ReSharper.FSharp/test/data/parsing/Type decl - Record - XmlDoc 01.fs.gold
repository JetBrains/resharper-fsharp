Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:R)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        IRecordRepresentation
          FSharpTokenType+LbraceTokenElement(type:LBRACE, text:{)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IRecordFieldDeclarationList
            IRecordFieldDeclaration
              XmlDocBlock
                DocComment(type:LINE_COMMENT, text:/// F)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:      ) spaces:"      "
              FSharpIdentifierToken(type:IDENTIFIER, text:Field)
              FSharpTokenType+ColonTokenElement(type:COLON, text::)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              INamedTypeUsage
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:int)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+RbraceTokenElement(type:RBRACE, text:})
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


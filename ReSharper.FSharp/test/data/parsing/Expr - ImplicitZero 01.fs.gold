Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    IExpressionStatement
      IChameleonExpression
        IPrefixAppExpr
          IReferenceExpr
            FSharpIdentifierToken(type:IDENTIFIER, text:foo)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IComputationExpr
            FSharpTokenType+LbraceTokenElement(type:LBRACE, text:{)
            NewLine(type:NEW_LINE, text:\n) spaces:"\n"
            Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
            ILetOrUseExpr
              ILocalBinding
                FSharpTokenType+LetBangTokenElement(type:LET_BANG, text:let!)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                ILocalReferencePat
                  IExpressionReferenceName
                    FSharpIdentifierToken(type:IDENTIFIER, text:x)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                IUnitExpr
                  FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                  FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
              IYieldOrReturnExpr
                IFromErrorExpr
                  FSharpTokenType+YieldTokenElement(type:YIELD, text:yield)
            NewLine(type:NEW_LINE, text:\n) spaces:"\n"
            FSharpTokenType+RbraceTokenElement(type:RBRACE, text:})
  NewLine(type:NEW_LINE, text:\n) spaces:"\n"


Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ILetBindingsDeclaration
      ITopBinding
        FSharpTokenType+LetTokenElement(type:LET, text:let)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IWildPat
          FSharpTokenType+UnderscoreTokenElement(type:UNDERSCORE, text:_)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IChameleonExpression
          IPrefixAppExpr
            IReferenceExpr
              IReferenceExpr
                FSharpIdentifierToken(type:IDENTIFIER, text:List)
              FSharpTokenType+DotTokenElement(type:DOT, text:.)
              FSharpIdentifierToken(type:IDENTIFIER, text:map)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IDotLambdaExpr
              IDotLambdaId
                FSharpTokenType+UnderscoreTokenElement(type:UNDERSCORE, text:_)
              FSharpTokenType+DotTokenElement(type:DOT, text:.)
              IPrefixAppExpr
                IItemIndexerExpr
                  IPrefixAppExpr
                    IReferenceExpr
                      FSharpIdentifierToken(type:IDENTIFIER, text:ToString)
                    IUnitExpr
                      FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                      FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
                  FSharpTokenType+DotTokenElement(type:DOT, text:.)
                  IIndexerArgList
                    FSharpTokenType+LbrackTokenElement(type:LBRACK, text:[)
                    ILiteralExpr
                      FSharpToken(type:INT32, text:0)
                    FSharpTokenType+RbrackTokenElement(type:RBRACK, text:])
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                IListExpr
                  FSharpTokenType+LbrackTokenElement(type:LBRACK, text:[)
                  ILiteralExpr
                    FSharpToken(type:INT32, text:1)
                  FSharpTokenType+RbrackTokenElement(type:RBRACK, text:])


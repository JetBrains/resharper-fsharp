Language: PsiLanguageType:F#
IFSharpSigFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:A)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        XmlDocBlock
          DocComment(type:LINE_COMMENT, text:/// B)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:B)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        ITypeAbbreviationRepresentation
          ITypeUsageOrUnionCaseDeclaration
            IFunctionTypeUsage
              INamedTypeUsage
                ITypeReferenceName
                  ITypeParameterId
                    FSharpTokenType+QuoteTokenElement(type:QUOTE, text:')
                    FSharpIdentifierToken(type:IDENTIFIER, text:T)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              FSharpTokenType+RarrowTokenElement(type:RARROW, text:->)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              INamedTypeUsage
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:unit)


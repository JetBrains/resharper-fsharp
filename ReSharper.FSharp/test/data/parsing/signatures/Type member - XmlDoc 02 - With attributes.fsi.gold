Language: PsiLanguageType:F#
IFSharpSigFile
  INamedModuleDeclaration
    FSharpTokenType+ModuleTokenElement(type:MODULE, text:module)
    Whitespace(type:WHITE_SPACE, text: ) spaces:" "
    FSharpIdentifierToken(type:IDENTIFIER, text:Module)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:T)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        IMemberSignature
          XmlDocBlock
            DocComment(type:LINE_COMMENT, text:///P)
          NewLine(type:NEW_LINE, text:\n) spaces:"\n"
          Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
          IAttributeList
            FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
            IAttribute
              ITypeReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:Attr)
            FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
          NewLine(type:NEW_LINE, text:\n) spaces:"\n"
          Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
          FSharpTokenType+MemberTokenElement(type:MEMBER, text:member)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpIdentifierToken(type:IDENTIFIER, text:P)
          IReturnTypeInfo
            FSharpTokenType+ColonTokenElement(type:COLON, text::)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IParameterSignatureTypeUsage
              INamedTypeUsage
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:int)
  NewLine(type:NEW_LINE, text:\n) spaces:"\n"


Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:T)
        IPrimaryConstructorDeclaration
          IParametersPatternDeclaration
            IUnitPat
              FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
              FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        IExternDeclaration
          IAttributeList
            FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
            IAttribute
              ITypeReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:DllImport)
              IChameleonExpression
                IParenExpr
                  FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                  ILiteralExpr
                    FSharpString(type:STRING, text:"user32.dll")
                  FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
            FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
          NewLine(type:NEW_LINE, text:\n) spaces:"\n"
          Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
          FSharpTokenType+StaticTokenElement(type:STATIC, text:static)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+ExternTokenElement(type:EXTERN, text:extern)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpIdentifierToken(type:IDENTIFIER, text:uint32)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpIdentifierToken(type:IDENTIFIER, text:M)
          FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
          FSharpIdentifierToken(type:IDENTIFIER, text:nativeint)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpIdentifierToken(type:IDENTIFIER, text:hWnd)
          FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        XmlDocBlock
          DocComment(type:LINE_COMMENT, text:///A1)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:A)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        IClassRepresentation
          FSharpTokenType+ClassTokenElement(type:CLASS, text:class)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+EndTokenElement(type:END, text:end)
      NewLine(type:NEW_LINE, text:\n) spaces:"\n"
      NewLine(type:NEW_LINE, text:\n) spaces:"\n"
      IFSharpTypeDeclaration
        XmlDocBlock
          DocComment(type:LINE_COMMENT, text:///B1)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        FSharpTokenType+AndTokenElement(type:AND, text:and)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        DocComment(type:LINE_COMMENT, text:///B2)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        FSharpIdentifierToken(type:IDENTIFIER, text:B)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        IClassRepresentation
          FSharpTokenType+ClassTokenElement(type:CLASS, text:class)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+EndTokenElement(type:END, text:end)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:A)
        IPrimaryConstructorDeclaration
          IPatternParameterDeclarationGroup
            IPatternParameterDeclaration
              IUnitPat
                FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        IMemberDeclaration
          IAttributeList
            FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
            IAttribute
              IAttributeTarget
                FSharpIdentifierToken(type:IDENTIFIER, text:method)
              FSharpTokenType+ColonTokenElement(type:COLON, text::)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              ITypeReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:M)
            FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
          NewLine(type:NEW_LINE, text:\n) spaces:"\n"
          Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
          FSharpTokenType+MemberTokenElement(type:MEMBER, text:member)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          INamedSelfId
            FSharpIdentifierToken(type:IDENTIFIER, text:this)
          FSharpTokenType+DotTokenElement(type:DOT, text:.)
          FSharpIdentifierToken(type:IDENTIFIER, text:Index)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+WithTokenElement(type:WITH, text:with)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IAccessorDeclaration
            IAttributeList
              FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
              IAttribute
                IAttributeTarget
                  FSharpIdentifierToken(type:IDENTIFIER, text:method)
                FSharpTokenType+ColonTokenElement(type:COLON, text::)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:M)
              FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpIdentifierToken(type:IDENTIFIER, text:get)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IPatternParameterDeclarationGroup
              IPatternParameterDeclaration
                IUnitPat
                  FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                  FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IChameleonExpression
              ILiteralExpr
                FSharpToken(type:INT32, text:5)
          NewLine(type:NEW_LINE, text:\n) spaces:"\n"
          Whitespace(type:WHITE_SPACE, text:                       ) spaces:"                       "
          FSharpTokenType+AndTokenElement(type:AND, text:and)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IAccessorDeclaration
            IAttributeList
              FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
              IAttribute
                IAttributeTarget
                  FSharpIdentifierToken(type:IDENTIFIER, text:method)
                FSharpTokenType+ColonTokenElement(type:COLON, text::)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:M)
              FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpIdentifierToken(type:IDENTIFIER, text:set)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IPatternParameterDeclarationGroup
              IPatternParameterDeclaration
                IUnitPat
                  FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                  FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IChameleonExpression
              IUnitExpr
                FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


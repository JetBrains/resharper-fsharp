Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:E)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        IEnumRepresentation
          IEnumCaseDeclaration
            FSharpTokenType+BarTokenElement(type:BAR, text:|)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpIdentifierToken(type:IDENTIFIER, text:A)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IChameleonExpression
              IParenExpr
                FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                IBinaryAppExpr
                  ILiteralExpr
                    FSharpToken(type:INT32, text:1)
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  IReferenceExpr
                    FSharpTokenType+PlusTokenElement(type:PLUS, text:+)
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  ILiteralExpr
                    FSharpToken(type:INT32, text:1)
                FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:T)
        IPrimaryConstructorDeclaration
          IPatternParameterDeclarationGroup
            IPatternParameterDeclaration
              IUnitPat
                FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        ILetBindingsDeclaration
          ITopBinding
            IAttributeList
              FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
              IAttribute
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:Foo)
              FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
            NewLine(type:NEW_LINE, text:\n) spaces:"\n"
            Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
            FSharpTokenType+LetTokenElement(type:LET, text:let)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+RecTokenElement(type:REC, text:rec)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IAttributeList
              FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
              IAttribute
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:Bar)
              FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+PublicTokenElement(type:PUBLIC, text:public)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            ITopReferencePat
              IExpressionReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:x)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IChameleonExpression
              ILiteralExpr
                FSharpToken(type:INT32, text:1)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"


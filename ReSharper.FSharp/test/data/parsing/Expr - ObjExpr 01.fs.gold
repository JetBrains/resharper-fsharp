Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    IExpressionStatement
      IChameleonExpression
        IObjExpr
          FSharpTokenType+LbraceTokenElement(type:LBRACE, text:{)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+NewTokenElement(type:NEW, text:new)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          ITypeReferenceName
            ITypeReferenceName
              FSharpIdentifierToken(type:IDENTIFIER, text:System)
            FSharpTokenType+DotTokenElement(type:DOT, text:.)
            FSharpIdentifierToken(type:IDENTIFIER, text:IDisposable)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+WithTokenElement(type:WITH, text:with)
          NewLine(type:NEW_LINE, text:\n) spaces:"\n"
          Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
          IMemberDeclaration
            FSharpTokenType+MemberTokenElement(type:MEMBER, text:member)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            INamedSelfId
              FSharpIdentifierToken(type:IDENTIFIER, text:x)
            FSharpTokenType+DotTokenElement(type:DOT, text:.)
            FSharpIdentifierToken(type:IDENTIFIER, text:Dispose)
            IPatternParameterDeclarationGroup
              IPatternParameterDeclaration
                IUnitPat
                  FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                  FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IChameleonExpression
              IUnitExpr
                FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+RbraceTokenElement(type:RBRACE, text:})
  NewLine(type:NEW_LINE, text:\n) spaces:"\n"


namespace global (1-3)
type GlobalType (3-3)
namespace N1.N (5-58)
module M1 (7-58)
module M1 val x: int (9-9)
module M1 val f: x: 'a -> 'a (10-10)
module M1 val (+): a: int -> b: int -> int (11-11)
module M1 val (|One|_|): x: 'a -> 'a option (12-12)
module M1 exception E1 (14-15)
module M1 exception E1 member NewMessage: string (15-15)
module M1 type Record (17-21)
module M1 type DU (23-25)
module M1 type Struct (27-31)
module M1 type Struct new: x: float * y: float -> Struct (29-29)
module M1 type IInterface inherit IDisposable (33-36)
module M1 type IInterface member M: x: int -> unit (36-36)
module M1 type List<'a> with (38-39)
module M1 type List<'a> member Length: int (39-39)
module M1 type GenericType<'t> inherit ResizeArray<int> (41-55)
module M1 type GenericType<'t> interface IDisposable (43-43)
module M1 type GenericType<'t> interface IEnumerable<string> (44-44)
module M1 type GenericType<'t> new: x: 't -> GenericType<'t> (46-46)
module M1 type GenericType<'t> new: x: string -> GenericType<'t> (47-47)
module M1 type GenericType<'t> member Method1: x: ('a -> int) -> (y: 'a * z: int) -> int (49-51)
module M1 type GenericType<'t> member Method2: x: 'a * ?y: int -> int (53-53)
module M1 type GenericType<'t> member Prop1: int (55-55)
module M1.NestedModule (57-58)
module M1.NestedModule val x: int (58-58)

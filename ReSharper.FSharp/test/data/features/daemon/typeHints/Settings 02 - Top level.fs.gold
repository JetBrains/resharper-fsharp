module Test

open System

let f x||(0) ||(1)=
    let g x = ()
    let x = fun y -> ()
    for x in [""] do ()
    { new IFormattable with
        member x.ToString(format, provider) = "" }

fun x||(2) -> ()

type A(x||(3)) =
    do
        let x||(4) = 3
        ()

    let array||(5) = [|""|]

    new(x||(6), y||(7)) = A(x + y)

    member _.P1||(8) =
        let x = 1
        x

    member _.P2||(9) = id

    member val P3 = 3 with get, set

    member x.P4||(10)
        with get index||(11) =
            let x = array[index]
            x
        and set index||(12) value||(13) =
            array[index] <- value

    member _.M(x||(14)) (y||(15), z||(16)) ||(17)=
        let res = x + y + z
        res

---------------------------------------------------------
(0): ReSharper Parameter Name Hint: : 'a
(1): ReSharper Parameter Name Hint: : IFormattable 
(2): ReSharper Parameter Name Hint: : 'a
(3): ReSharper Parameter Name Hint: : int
(4): ReSharper Parameter Name Hint: : int
(5): ReSharper Parameter Name Hint: : string array
(6): ReSharper Parameter Name Hint: : int
(7): ReSharper Parameter Name Hint: : int
(8): ReSharper Parameter Name Hint: : int 
(9): ReSharper Parameter Name Hint: : obj -> obj 
(10): ReSharper Parameter Name Hint: : string 
(11): ReSharper Parameter Name Hint: : int
(12): ReSharper Parameter Name Hint: : int
(13): ReSharper Parameter Name Hint: : string
(14): ReSharper Parameter Name Hint: : int
(15): ReSharper Parameter Name Hint: : int
(16): ReSharper Parameter Name Hint: : int
(17): ReSharper Parameter Name Hint: : int 

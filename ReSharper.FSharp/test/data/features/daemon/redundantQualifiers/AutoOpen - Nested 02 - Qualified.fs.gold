module TopLevel

module Nested1 =
    [<AutoOpen>]
    module Nested2 =
        type T() = class end

open Nested1
let t: ||Nested1.|(0)Nested2.|(1)T = ||Nested1.|(2)Nested2.|(3)T()

---------------------------------------------------------
(0):<overlapped> ReSharper Dead Code: Qualifier is redundant
(1): ReSharper Dead Code: Qualifier is redundant
(2):<overlapped> ReSharper Dead Code: Qualifier is redundant
(3): ReSharper Dead Code: Qualifier is redundant

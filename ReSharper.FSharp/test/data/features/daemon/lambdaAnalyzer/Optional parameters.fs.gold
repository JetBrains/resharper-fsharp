type A(_a: int, ?_b: int) =
    static member M(x, y) = ()
    static member M1(x, ?y) = ()

type A1(_a: int, _b: int) = class end
type C(?_a: int) = class end
type C1(_a: int) = class end


[(1, 1)] |> List.map (fun (a, b) -> A(a, b))
let _ = fun (a, b) -> A(a, b)

[(1, 1)] |> List.map (|fun (a, b) -> A.M(a, b)|(0))
let _ = |fun (a, b) -> A.M(a, b)|(1)

[(1, 1)] |> List.map (fun (a, b) -> A.M1(a, b))
let _ = fun (a, b) -> A.M1(a, b)

[(1, 1)] |> List.map (fun (a, b) (c, d) -> A.M1(c, d))
let _ = fun (a, b) (c, d) -> A.M1(c, d)

[(1, 1)] |> List.map (|fun (a, b) -> A1(a, b)|(2))
let _ = |fun (a, b) -> A1(a, b)|(3)

[1] |> List.map (fun a -> C(a))
let _ = fun a -> C(a)

[1] |> List.map (|fun a -> C1(a)|(4))
let _ = |fun a -> C1(a)|(5)

---------------------------------------------------------
(0): ReSharper Hint: Lambda can be replaced with 'A.M'
(1): ReSharper Hint: Lambda can be replaced with 'A.M'
(2): ReSharper Hint: Lambda can be replaced with 'A1'
(3): ReSharper Hint: Lambda can be replaced with 'A1'
(4): ReSharper Hint: Lambda can be replaced with 'C1'
(5): ReSharper Hint: Lambda can be replaced with 'C1'

module Module

type IA<'T1> =
  abstract M: 'T1 * int -> unit

type IB<'T2, 'T3> =
  inherit IA<'T2>
  abstract M: 'T3 * double -> unit

type T() =
  interface IB<int, double> with
      member this.M(var0: double, var1: double): unit = {selstart}failwith "todo"{selend}
      member this.M(var0: int, var1: int): unit = failwith "todo"

//${NEW_NAME:Zzz}
module Module

type T() =
    let (    | Zzz | ) x =
        not x

    let f (Zzz x) =
        let (Zzz x) = x
        x

    let _ = (|Zzz|)

    do
        match true with
        | Zzz x -> ()

        let _ = (|Zzz|)

    member x.Foo =
        match true with
        | Zzz x -> ()

        let (|Id|) f x = x

        match () with
        | Id (|Zzz|) 1 -> ()

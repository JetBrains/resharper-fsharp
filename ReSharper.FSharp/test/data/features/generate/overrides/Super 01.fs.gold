Provided elements:
 0: M(System.Int32):System.Void
 1: M(System.Double):System.Void
 2: ToString():System.String
 3: Equals(System.Object):System.Boolean
 4: GetHashCode():System.Int32
 5: Finalize():System.Void

// ${KIND:Overrides}
// ${SELECT0:M(System.Int32):System.Void}
// ${SELECT1:M(System.Double):System.Void}

[<AbstractClass>]
type A() =
    abstract M: int -> unit
    default x.M(_: int) = ()

    abstract M: double -> unit
    default x.M(_: double) = ()

type B() =
    inherit A()
    override x.M(_: int) = ()

type T() =
    inherit B()

    override this.M(var0: int): unit = base.M(var0)
    override this.M(var0: double): unit = {selstart}base.M(var0){selend}
